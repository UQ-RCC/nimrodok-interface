import org.gradle.plugins.signing.Sign

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath group: 'org.ajoberstar', name: 'grgit', version: '1.7.2'
	}
}

apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'au.edu.uq.rcc'
// version is now set by looking at git
// version = '1.0'

sourceCompatibility = '1.5'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
	def git = null
	try {
		git = org.ajoberstar.grgit.Grgit.open(dir: projectDir)
		project.version = git.describe()
		println "Found git repository, current HEAD: ${git.head().id}, version = ${project.version}"
	} catch(org.eclipse.jgit.errors.RepositoryNotFoundException e) {
		println "Not building from a git repository..."
		project.version = "unknown"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.10'
}
	
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
	archives jar
}

if(project.hasProperty('sign')) {
	gradle.taskGraph.whenReady { taskGraph ->
		if(taskGraph.allTasks.any { it instanceof Sign }) {
			allprojects { ext."signing.keyId" = System.getenv('GPG_KEY_ID') }
			allprojects { ext."signing.secretKeyRingFile" = "${System.getenv('HOME')}/.gnupg/secring.gpg" }
			allprojects { ext."signing.password" = System.getenv('GPG_PASSPHRASE') }
		}
	}

	signing {
		sign configurations.archives
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
 
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: System.getenv('OSSRH_JIRA_USERNAME'), password: System.getenv('OSSRH_JIRA_PASSWORD'))
			}

			pom.project {
				name 'nimrodok-interface'
				packaging 'jar'
				description 'Module-creation interface for Nimrod/OK'
				url 'https://github.com/UQ-RCC/nimrodok-interface'
 
				scm {
					url 'scm:https://github.com/UQ-RCC/nimrodok-interface.git'
					connection 'scm:https://github.com/UQ-RCC/nimrodok-interface.git'
					developerConnection 'scm:https://github.com/UQ-RCC/nimrodok-interface.git'
				}

				licenses {
					license {
						name 'The MIT License'
						url 'https://opensource.org/licenses/MIT'
						distribution 'repo'
					}
				}
 
				developers {
					developer {
						id 'zane'
						name 'Zane van Iperen'
						email 'zane@zanevaniperen.com'
						url 'https://zanevaniperen.com'
						organization 'Research Computing Centre, University of Queensland'
						organizationUrl 'https://rcc.uq.edu.au/'
						timezone 'Australia/Brisbane'
					}
					developer {
						id 'hoangnguyen177'
						name 'Hoang Nguyen'
						email 'h.nguyen30@uq.edu.au'
						organization 'Research Computing Centre, University of Queensland'
						organizationUrl 'https://rcc.uq.edu.au/'
						timezone 'Australia/Brisbane'
					}
				}
		    }
		}
	}
}
